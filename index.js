# MDT Discord Bot - زر إيقاف | تشغيل البوت المتطور

## المميزات الجديدة

### 🔧 زر إيقاف | تشغيل البوت المتطور

تم تطوير زر **"إيقاف | تشغيل البوت"** في أمر `/المطور` مع مميزات متقدمة:

#### المميزات الأساسية:
1. **قائمة السيرفرات**: عند الضغط على الزر، تظهر قائمة بجميع السيرفرات مع دعم الصفحات
2. **معلومات مفصلة**: عند اختيار سيرفر، تظهر معلوماته الكاملة مع حالة البوت
3. **تغيير اسم البوت**: عند إيقاف البوت، يتغير اسمه إلى "اسم البوت + متوقف"
4. **حماية الأوامر**: جميع الأوامر تتوقف عند إيقاف البوت (ما عدا أمر المطور)

#### المميزات المتقدمة:
5. **رسائل مخصصة**: عند استخدام أي أمر أثناء إيقاف البوت، تظهر رسالة:
   ```
   🔴 البوت حالياً متوقف من أحد المطورين يرجى التواصل مع المطور @المطور
   ```

6. **إشعارات اللوق**: عند تغيير حالة البوت، يتم إرسال إشعار في روم اللوق مع:
   - اسم المطور الذي غير الحالة
   - الحالة الجديدة
   - اسم السيرفر

7. **حفظ الحالة**: يتم حفظ حالة البوت واسمه الأصلي في ملف البيانات

#### كيفية الاستخدام:
1. استخدم أمر `/المطور`
2. اختر "إيقاف | تشغيل البوت" من القائمة
3. اختر السيرفر من قائمة السيرفرات (مع دعم الصفحات)
4. اضغط على زر "إيقاف البوت" أو "تشغيل البوت"
5. ستظهر معلومات محدثة للسيرفر مع الحالة الجديدة

#### الأمان والحماية:
- **حماية كاملة**: جميع الأوامر محمية عند إيقاف البوت
- **استثناء المطور**: أمر `/المطور` يعمل حتى لو كان البوت متوقف
- **رسائل واضحة**: رسائل تحذير واضحة للمستخدمين
- **منشن المطور**: يتم منشن المطور الأول في السيرفر عند محاولة استخدام أوامر محمية

#### التحديثات التلقائية:
- **اسم البوت**: يتغير تلقائياً عند الإيقاف/التشغيل
- **حفظ البيانات**: يتم حفظ جميع التغييرات تلقائياً
- **استرجاع الحالة**: عند إعادة تشغيل البوت، يتم استرجاع الحالة المحفوظة

#### الإشعارات واللوق:
- **إشعار الكونسول**: يظهر حالة البوت عند بدء التشغيل
- **إشعار اللوق**: إشعارات مفصلة في روم اللوق
- **تتبع التغييرات**: تسجيل كامل لجميع التغييرات

---

## 🚀 تشغيل البوت على Render

### المتطلبات:
- Node.js 18 أو أحدث
- حساب Render
- توكن Discord Bot

### خطوات التشغيل:

#### 1. رفع الملفات على GitHub:
```bash
git init
git add .
git commit -m "Initial commit"
git branch -M main
git remote add origin https://github.com/username/repository-name.git
git push -u origin main
```

#### 2. إعداد Render:
1. اذهب إلى [Render Dashboard](https://dashboard.render.com)
2. انقر على "New +" ثم اختر "Web Service"
3. اربط حساب GitHub واختر المستودع
4. املأ المعلومات التالية:
   - **Name**: MDT-Bot
   - **Environment**: Node
   - **Build Command**: `chmod +x render-build.sh && ./render-build.sh && npm install`
   - **Start Command**: `npm start`

#### 3. إعداد متغيرات البيئة:
في Render Dashboard، أضف المتغيرات التالية:
- `DISCORD_TOKEN` = توكن البوت الخاص بك
- `BOT_ID` = آيدي البوت الخاص بك

#### 4. تشغيل البوت:
انقر على "Create Web Service" وانتظر حتى يكتمل البناء والتشغيل.

### الملفات المطلوبة:
```
MDT/
├── index.js              # الملف الرئيسي للبوت
├── militaryImage.js      # معالجة الصور العسكرية
├── config.js             # ملف التكوين
├── package.json          # تبعيات المشروع
├── render-build.sh       # سكريبت البناء
├── .gitignore           # ملف تجاهل Git
└── README.md            # هذا الملف
```

## 🔧 استكشاف الأخطاء

### البوت لا يعمل على Discord:

#### 1. التحقق من التوكن:
- تأكد من أن `DISCORD_TOKEN` صحيح في إعدادات Render
- تأكد من أن البوت لديه الصلاحيات المطلوبة في Discord Developer Portal

#### 2. التحقق من الصلاحيات:
في Discord Developer Portal، تأكد من تفعيل:
- **Gateway Intents**: Presence Intent, Server Members Intent, Message Content Intent
- **Bot Permissions**: Send Messages, Use Slash Commands, Manage Nicknames

#### 3. التحقق من إضافة البوت للسيرفر:
- تأكد من أن البوت تمت إضافته للسيرفر باستخدام رابط OAuth2
- الرابط يجب أن يحتوي على: `bot` و `applications.commands` scopes

#### 4. مراجعة السجلات:
في Render Dashboard، راجع سجلات البوت للبحث عن أخطاء:
- `❌ خطأ: DISCORD_TOKEN غير موجود`
- `❌ خطأ في تسجيل الدخول`
- `⚠️ البوت غير موجود في أي سيرفر`

#### 5. إعادة تشغيل البوت:
- في Render Dashboard، اضغط على "Manual Deploy"
- انتظر حتى يكتمل البناء والتشغيل

### رسائل الخطأ الشائعة:

#### `DISCORD_TOKEN غير موجود`:
```
❌ خطأ: DISCORD_TOKEN غير موجود في متغيرات البيئة
🔍 تأكد من إضافة DISCORD_TOKEN في إعدادات Render
```

**الحل**: أضف `DISCORD_TOKEN` في Environment Variables في Render

#### `خطأ في تسجيل الدخول`:
```
❌ خطأ في تسجيل الدخول: [Token invalid]
```

**الحل**: تأكد من أن التوكن صحيح وحديث في Discord Developer Portal

#### `البوت غير موجود في أي سيرفر`:
```
⚠️ البوت غير موجود في أي سيرفر
```

**الحل**: أضف البوت للسيرفر باستخدام رابط OAuth2 مع الصلاحيات المطلوبة

### ملاحظات مهمة:
- تأكد من أن توكن البوت صحيح
- البوت يحتاج صلاحيات خاصة في Discord
- ملف `data.json` سيتم إنشاؤه تلقائياً
- تأكد من تفعيل جميع الصلاحيات المطلوبة للبوت

---

**ملاحظة**: هذا النظام مفيد جداً للصيانة والتحكم في البوت بشكل آمن ومتطور! 🎉 
